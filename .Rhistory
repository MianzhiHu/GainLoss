library(ggplot2)
library(lme4)
library(lmerTest)
library(effects)
library(ggplot2)
library(dplyr)
library(mgcv)
library(sjPlot)
library(segmented)
library(survival)
library(changepoint)
library(car)
library(emmeans)
library(nnet)
library(MASS)
# ==============================================================================
# Read the data
# ==============================================================================
data <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/E2_summary_with_assignments.csv")
data$Condition <- factor(data$Condition, levels = c('Baseline', 'Frequency'))
data$SetSeen <- factor(data$SetSeen, levels = c(0, 1, 2, 3, 4, 5),
labels = c('AB', 'CD', 'CA', 'CB', 'BD', 'AD'))
data$group_baseline <- factor(data$group_baseline, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
data$group_frequency <- factor(data$group_frequency, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
unique(data$group_frequency)
data$Gender <- factor(data$Gender, levels = c("Female", "Male", "Other", "Prefer not to answer"))
data$Ethnicity <- factor(data$Ethnicity, levels = c("Hispanic or Latino", "Not Hispanic or Latino","Prefer not to answer"))
data$Race <- factor(data$Race, levels = c("More than one Race", "White", "Asian",
"Prefer not to answer", "Black or African American",
"American Indian or Alaskan Native",
"Native Hawaiin or Other Pacific Islander"))
individual_data <- data %>%
dplyr::select(Subnum, group_baseline, prob1_baseline, prob2_baseline, prob3_baseline,
group_frequency, prob1_frequency, prob2_frequency, prob3_frequency,
Gender, Ethnicity, Race, Age, Big5O, Big5C,
Big5E, Big5A, Big5N, BISScore, CESDScore, ESIBF_disinhScore,
ESIBF_aggreScore, ESIBF_sScore, PSWQScore, STAITScore, STAISScore) %>%
distinct(Subnum, .keep_all = TRUE)
model <- glm(BestOption ~ Gender + Ethnicity + Race + Age + Big5O + Big5C +
Big5E + Big5A + Big5N + BISScore + CESDScore + ESIBF_disinhScore
+ ESIBF_aggreScore + ESIBF_sScore + PSWQScore + STAITScore + STAISScore,
data = CA)
CA <- data %>%
filter(SetSeen == 'CA')
Group13 <- CA %>%
filter(group_baseline != 2)
model <- lmer(BestOption ~ group_baseline * Condition + (1|Subnum), data = data)
summary(model)
plot(allEffects(model))
model <- glm(BestOption ~ Gender + Ethnicity + Race + Age + Big5O + Big5C +
Big5E + Big5A + Big5N + BISScore + CESDScore + ESIBF_disinhScore
+ ESIBF_aggreScore + ESIBF_sScore + PSWQScore + STAITScore + STAISScore,
data = CA)
summary(model)
model <- glm(BestOption ~ Condition + Gender + Ethnicity + Race + Age + Big5O + Big5C +
Big5E + Big5A + Big5N + BISScore + CESDScore + ESIBF_disinhScore
+ ESIBF_aggreScore + ESIBF_sScore + PSWQScore + STAITScore + STAISScore,
data = CA)
summary(model)
plot(allEffects(model))
model <- glm(BestOption ~ Condition * group_baseline + Gender + Ethnicity + Race + Age + Big5O + Big5C +
Big5E + Big5A + Big5N + BISScore + CESDScore + ESIBF_disinhScore
+ ESIBF_aggreScore + ESIBF_sScore + PSWQScore + STAITScore + STAISScore,
data = CA)
summary(model)
plot(allEffects(model))
model <- glm(group_baseline ~ Condition * BestOption + Gender + Ethnicity + Race + Age + Big5O + Big5C +
Big5E + Big5A + Big5N + BISScore + CESDScore + ESIBF_disinhScore
+ ESIBF_aggreScore + ESIBF_sScore + PSWQScore + STAITScore + STAISScore,
data = CA)
model <- polr(group_baseline ~ Condition * BestOption + Gender + Ethnicity + Race + Age + Big5O + Big5C +
Big5E + Big5A + Big5N + BISScore + CESDScore + ESIBF_disinhScore
+ ESIBF_aggreScore + ESIBF_sScore + PSWQScore + STAITScore + STAISScore,
data = CA, Hess = TRUE)
data <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/E2_summary_with_assignments.csv")
data$Condition <- factor(data$Condition, levels = c('Baseline', 'Frequency'))
data$SetSeen <- factor(data$SetSeen, levels = c(0, 1, 2, 3, 4, 5),
labels = c('AB', 'CD', 'CA', 'CB', 'BD', 'AD'))
data$group_baseline <- factor(data$group_baseline, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
data$group_frequency <- factor(data$group_frequency, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
unique(data$group_frequency)
data$Gender <- factor(data$Gender, levels = c("Female", "Male", "Other", "Prefer not to answer"))
data$Ethnicity <- factor(data$Ethnicity, levels = c("Hispanic or Latino", "Not Hispanic or Latino","Prefer not to answer"))
data$Race <- factor(data$Race, levels = c("More than one Race", "White", "Asian",
"Prefer not to answer", "Black or African American",
"American Indian or Alaskan Native",
"Native Hawaiin or Other Pacific Islander"))
individual_data <- data %>%
dplyr::select(Subnum, group_baseline, prob1_baseline, prob2_baseline, prob3_baseline,
group_frequency, prob1_frequency, prob2_frequency, prob3_frequency,
Gender, Ethnicity, Race, Age, Big5O, Big5C,
Big5E, Big5A, Big5N, BISScore, CESDScore, ESIBF_disinhScore,
ESIBF_aggreScore, ESIBF_sScore, PSWQScore, STAITScore, STAISScore) %>%
distinct(Subnum, .keep_all = TRUE)
CA <- data %>%
filter(SetSeen == 'CA')
model <- polr(group_baseline ~ Condition * BestOption + Gender + Ethnicity + Race + Age + Big5O + Big5C +
Big5E + Big5A + Big5N + BISScore + CESDScore + ESIBF_disinhScore
+ ESIBF_aggreScore + ESIBF_sScore + PSWQScore + STAITScore + STAISScore,
data = CA, Hess = TRUE)
model <- glm(group_baseline ~ Condition * BestOption + Gender + Ethnicity + Race + Age + Big5O + Big5C +
Big5E + Big5A + Big5N + BISScore + CESDScore + ESIBF_disinhScore
+ ESIBF_aggreScore + ESIBF_sScore + PSWQScore + STAITScore + STAISScore,
data = CA)
data <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/E2_summary_with_assignments.csv")
data$Condition <- factor(data$Condition, levels = c('Baseline', 'Frequency'))
data$SetSeen <- factor(data$SetSeen, levels = c(0, 1, 2, 3, 4, 5),
labels = c('AB', 'CD', 'CA', 'CB', 'BD', 'AD'))
data$Gender <- factor(data$Gender, levels = c("Female", "Male", "Other", "Prefer not to answer"))
data$Ethnicity <- factor(data$Ethnicity, levels = c("Hispanic or Latino", "Not Hispanic or Latino","Prefer not to answer"))
data$Race <- factor(data$Race, levels = c("More than one Race", "White", "Asian",
"Prefer not to answer", "Black or African American",
"American Indian or Alaskan Native",
"Native Hawaiin or Other Pacific Islander"))
individual_data <- data %>%
dplyr::select(Subnum, group_baseline, prob1_baseline, prob2_baseline, prob3_baseline,
group_frequency, prob1_frequency, prob2_frequency, prob3_frequency,
Gender, Ethnicity, Race, Age, Big5O, Big5C,
Big5E, Big5A, Big5N, BISScore, CESDScore, ESIBF_disinhScore,
ESIBF_aggreScore, ESIBF_sScore, PSWQScore, STAITScore, STAISScore) %>%
distinct(Subnum, .keep_all = TRUE)
CA <- data %>%
filter(SetSeen == 'CA')
model <- glm(group_baseline ~ Condition * BestOption + Gender + Ethnicity + Race + Age + Big5O + Big5C +
Big5E + Big5A + Big5N + BISScore + CESDScore + ESIBF_disinhScore
+ ESIBF_aggreScore + ESIBF_sScore + PSWQScore + STAITScore + STAISScore,
data = CA)
summary(model)
summary_model <- summary(model)
model <- glm(BestOption ~ Condition * group_baseline + Big5O + Big5C +
Big5E + Big5A + Big5N + BISScore + CESDScore + ESIBF_disinhScore
+ ESIBF_aggreScore + ESIBF_sScore + PSWQScore + STAITScore + STAISScore,
data = CA)
summary(model)
plot(allEffects(model))
data <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/E2_summary_with_assignments.csv")
data$Condition <- factor(data$Condition, levels = c('Baseline', 'Frequency'))
data$SetSeen <- factor(data$SetSeen, levels = c(0, 1, 2, 3, 4, 5),
labels = c('AB', 'CD', 'CA', 'CB', 'BD', 'AD'))
data$group_baseline <- factor(data$group_baseline, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
data$group_frequency <- factor(data$group_frequency, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
unique(data$group_frequency)
data$Gender <- factor(data$Gender, levels = c("Female", "Male", "Other", "Prefer not to answer"))
data$Ethnicity <- factor(data$Ethnicity, levels = c("Hispanic or Latino", "Not Hispanic or Latino","Prefer not to answer"))
data$Race <- factor(data$Race, levels = c("More than one Race", "White", "Asian",
"Prefer not to answer", "Black or African American",
"American Indian or Alaskan Native",
"Native Hawaiin or Other Pacific Islander"))
individual_data <- data %>%
dplyr::select(Subnum, group_baseline, prob1_baseline, prob2_baseline, prob3_baseline,
group_frequency, prob1_frequency, prob2_frequency, prob3_frequency,
Gender, Ethnicity, Race, Age, Big5O, Big5C,
Big5E, Big5A, Big5N, BISScore, CESDScore, ESIBF_disinhScore,
ESIBF_aggreScore, ESIBF_sScore, PSWQScore, STAITScore, STAISScore) %>%
distinct(Subnum, .keep_all = TRUE)
CA <- data %>%
filter(SetSeen == 'CA')
model <- polr(group_baseline ~ Gender + Ethnicity + Race + Age + Big5O + Big5C +
Big5E + Big5A + Big5N + BISScore + CESDScore + ESIBF_disinhScore
+ ESIBF_aggreScore + ESIBF_sScore + PSWQScore + STAITScore + STAISScore,
data = individual_data, Hess = TRUE)
summary(model)
summary_model <- summary(model)
# Compute z-values and p-values
coefs <- summary_model$coefficients
z_values <- coefs[, "Value"] / coefs[, "Std. Error"]
p_values <- 2 * (1 - pnorm(abs(z_values)))
# Combine results
results <- cbind(coefs, "z value" = z_values, "p value" = p_values)
rounded_results <- round(results, 3)
print(rounded_results)
model <- polr(group_frequency ~ Gender + Ethnicity + Race + Age + Big5O + Big5C +
Big5E + Big5A + Big5N + BISScore + CESDScore + ESIBF_disinhScore
+ ESIBF_aggreScore + ESIBF_sScore + PSWQScore + STAITScore + STAISScore,
data = individual_data, Hess = TRUE)
summary(model)
summary_model <- summary(model)
# Compute z-values and p-values
coefs <- summary_model$coefficients
z_values <- coefs[, "Value"] / coefs[, "Std. Error"]
p_values <- 2 * (1 - pnorm(abs(z_values)))
# Combine results
results <- cbind(coefs, "z value" = z_values, "p value" = p_values)
rounded_results <- round(results, 3)
print(rounded_results)
library(ggplot2)
library(lme4)
library(lmerTest)
library(effects)
library(ggplot2)
library(dplyr)
library(mgcv)
library(sjPlot)
library(segmented)
library(survival)
library(changepoint)
library(car)
library(emmeans)
library(nnet)
library(MASS)
# ==============================================================================
# Read the data
# ==============================================================================
data <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/E2_summary_CA.csv")
View(data)
data$Condition <- factor(data$Condition, levels = c('Baseline', 'Frequency'))
data$TrialType <- factor(data$SetSeen, levels = c('AB', 'CD', 'CA', 'CB', 'BD', 'AD'))
data$TrialType <- factor(data$TrialType, levels = c('AB', 'CD', 'CA', 'CB', 'BD', 'AD'))
model <- lmer(BestOption ~ training_accuracy * Condition + (1|Subnum), data = data)
summary(model)
plot(allEffects(model))
View(model)
intercept <- fixef(model)["(Intercept)"]
fixef(model)["(Intercept)"]
fixed_intercept <- fixef(model)["(Intercept)"]
fixed_intercept <- fixef(model)["(Intercept)"]
# Random intercepts (per participant)
random_intercepts <- ranef(model)$Subnum[["(Intercept)"]]
# Participant IDs
participants <- rownames(ranef(model)$Subnum)
# Combine to get full intercept per participant
individual_intercepts <- fixed_intercept + random_intercepts
names(individual_intercepts) <- participants
# 2. Extract fitted values (includes both fixed and random effects)
y_fitted <- fitted(model)
# 3. Calculate the "corrected y" — residuals after adjusting for x
y_corrected <- resid(model)
View(model)
data$bestoption_corrected <- y_corrected
data$bestoption_corrected <- resid(model)
model <- glm(bestoption_corrected ~ Condition + group_baseline + Big5O + Big5C +
Big5E + Big5A + Big5N + BISScore + CESDScore + ESIBF_disinhScore
+ ESIBF_aggreScore + ESIBF_sScore + PSWQScore + STAITScore + STAISScore,
data = data)
summary(model)
model <- glm(bestoption_corrected ~ Condition + Big5O + Big5C +
Big5E + Big5A + Big5N + BISScore + CESDScore + ESIBF_disinhScore
+ ESIBF_aggreScore + ESIBF_sScore + PSWQScore + STAITScore + STAISScore,
data = data)
summary(model)
model <- glm(bestoption_corrected ~ + Big5O + Big5C +
Big5E + Big5A + Big5N + BISScore + CESDScore + ESIBF_disinhScore
+ ESIBF_aggreScore + ESIBF_sScore + PSWQScore + STAITScore + STAISScore,
data = data)
summary(model)
model <- lmer(BestOption ~ training_accuracy * Condition + (1|Subnum), data = data)
summary(model)
plot(allEffects(model))
# Calculate the residual
data$bestoption_corrected <- data$BestOption - predict(model, re.form = NA)
model <- glm(bestoption_corrected ~ Condition + Big5O + Big5C +
Big5E + Big5A + Big5N + BISScore + CESDScore + ESIBF_disinhScore
+ ESIBF_aggreScore + ESIBF_sScore + PSWQScore + STAITScore + STAISScore,
data = data)
summary(model)
model <- glm(bestoption_corrected ~ Condition + training_accuracy + Big5O + Big5C +
Big5E + Big5A + Big5N + BISScore + CESDScore + ESIBF_disinhScore
+ ESIBF_aggreScore + ESIBF_sScore + PSWQScore + STAITScore + STAISScore,
data = data)
summary(model)
data <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/E2_summary_CA.csv")
data$Condition <- factor(data$Condition, levels = c('Baseline', 'Frequency'))
data$TrialType <- factor(data$TrialType, levels = c('AB', 'CD', 'CA', 'CB', 'BD', 'AD'))
data$group_baseline <- factor(data$group_baseline, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
data$group_frequency <- factor(data$group_frequency, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
model <- lmer(BestOption ~ training_accuracy * Condition + (1|Subnum), data = data)
summary(model)
plot(allEffects(model))
# Calculate the residual
data$bestoption_corrected <- ranef(model)$Subnum[["(Intercept)"]]
data <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/E2_summary_CA.csv")
data$Condition <- factor(data$Condition, levels = c('Baseline', 'Frequency'))
data$TrialType <- factor(data$TrialType, levels = c('AB', 'CD', 'CA', 'CB', 'BD', 'AD'))
data$group_baseline <- factor(data$group_baseline, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
data$group_frequency <- factor(data$group_frequency, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
model <- lmer(BestOption ~ training_accuracy * Condition + (1|Subnum), data = data)
summary(model)
plot(allEffects(model))
# Calculate the residual
data$bestoption_corrected <- ranef(model)
View(data)
View(data[[37]][[1]])
# Calculate the residual
data$bestoption_corrected <- ranef(model)$Subnum[[,"(Intercept)"]]
# Calculate the residual
data$bestoption_corrected <- ranef(model)$Subnum[,"(Intercept)"]
View(data)
data <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/E2_summary_CA.csv")
data$Condition <- factor(data$Condition, levels = c('Baseline', 'Frequency'))
data$TrialType <- factor(data$TrialType, levels = c('AB', 'CD', 'CA', 'CB', 'BD', 'AD'))
data$group_baseline <- factor(data$group_baseline, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
data$group_frequency <- factor(data$group_frequency, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
model <- lmer(BestOption ~ training_accuracy * Condition + (1|Subnum), data = data)
summary(model)
plot(allEffects(model))
# Calculate the residual
individual_trend <- ranef(model)$Subnum[["(Intercept)"]]
individual_effects <- coef(model)$Subnum
View(individual_effects)
data <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/E2_summary_CA.csv")
data$Condition <- factor(data$Condition, levels = c('Baseline', 'Frequency'))
data$TrialType <- factor(data$TrialType, levels = c('AB', 'CD', 'CA', 'CB', 'BD', 'AD'))
data$group_baseline <- factor(data$group_baseline, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
data$group_frequency <- factor(data$group_frequency, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
model <- lmer(BestOption ~ training_accuracy * Condition + (1|Subnum), data = data)
summary(model)
plot(allEffects(model))
# Calculate the residual
individual_effects <- coef(model)$Subnum
model <- glm(bestoption_corrected ~ Condition + training_accuracy + Big5O + Big5C +
Big5E + Big5A + Big5N + BISScore + CESDScore + ESIBF_disinhScore
+ ESIBF_aggreScore + ESIBF_sScore + PSWQScore + STAITScore + STAISScore,
data = data)
model <- glm(C_diff ~ Condition + training_accuracy + Big5O + Big5C +
Big5E + Big5A + Big5N + BISScore + CESDScore + ESIBF_disinhScore
+ ESIBF_aggreScore + ESIBF_sScore + PSWQScore + STAITScore + STAISScore,
data = data)
summary(model)
View(data)
data <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/E2_summary.csv")
data <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/E2_summary_with_assignments.csv")
data$Condition <- factor(data$Condition, levels = c('Baseline', 'Frequency'))
data$TrialType <- factor(data$TrialType, levels = c('AB', 'CD', 'CA', 'CB', 'BD', 'AD'))
data$group_baseline <- factor(data$group_baseline, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
data$group_frequency <- factor(data$group_frequency, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
model <- lmer(BestOption ~ training_accuracy * Condition + TrialType + (1|Subnum), data = data)
data <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/E2_summary_full.csv")
data$Condition <- factor(data$Condition, levels = c('Baseline', 'Frequency'))
data$TrialType <- factor(data$TrialType, levels = c('AB', 'CD', 'CA', 'CB', 'BD', 'AD'))
data$group_baseline <- factor(data$group_baseline, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
data$group_frequency <- factor(data$group_frequency, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
model <- lmer(BestOption ~ training_accuracy * Condition + TrialType + (1|Subnum), data = data)
summary(model)
plot(allEffects(model))
data <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/E2_summary_testing.csv")
data$Condition <- factor(data$Condition, levels = c('Baseline', 'Frequency'))
data$TrialType <- factor(data$TrialType, levels = c('AB', 'CD', 'CA', 'CB', 'BD', 'AD'))
data$group_baseline <- factor(data$group_baseline, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
data$group_frequency <- factor(data$group_frequency, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
model <- lmer(BestOption ~ training_accuracy * Condition + TrialType + (1|Subnum), data = data)
summary(model)
plot(allEffects(model))
model <- lmer(BestOption ~ training_accuracy * Condition * TrialType + (1|Subnum), data = data)
summary(model)
plot(allEffects(model))
data <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/E2_summary_CA.csv")
data$Condition <- factor(data$Condition, levels = c('Baseline', 'Frequency'))
data$TrialType <- factor(data$TrialType, levels = c('AB', 'CD', 'CA', 'CB', 'BD', 'AD'))
data$group_baseline <- factor(data$group_baseline, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
data$group_frequency <- factor(data$group_frequency, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
model <- lmer(BestOption ~ training_accuracy * Condition + (1|Subnum), data = data)
summary(model)
plot(allEffects(model))
accuracy_wide <- data %>%
select(Subnum, Condition, BestOption) %>%
pivot_wider(names_from = Condition, values_from = BestOption)
library(tidyr)
accuracy_wide <- data %>%
select(Subnum, Condition, BestOption) %>%
pivot_wider(names_from = Condition, values_from = BestOption)
library(tidyr)
library(dplyr)
accuracy_wide <- data %>%
select(Subnum, Condition, BestOption) %>%
pivot_wider(names_from = Condition, values_from = BestOption)
library(ggplot2)
library(lme4)
library(lmerTest)
library(effects)
library(ggplot2)
library(tidyr)
library(dplyr)
library(mgcv)
library(sjPlot)
library(segmented)
library(survival)
library(changepoint)
library(car)
library(emmeans)
library(nnet)
library(MASS)
accuracy_wide <- data %>%
select(Subnum, Condition, BestOption) %>%
pivot_wider(names_from = Condition, values_from = BestOption)
accuracy_wide <- data %>%
select(Subnum, Condition, BestOption)
class(data)
accuracy_wide <- data %>%
dplyr::select(Subnum, Condition, BestOption) %>%
pivot_wider(names_from = Condition, values_from = BestOption)
model <- lm(Frequency ~ Baseline, data = accuracy_wide)
summary(model)
cor.test(accuracy_wide$Baseline, accuracy_wide$Frequency)
accuracy_wide <- data %>%
pivot_wider(names_from = Condition, values_from = BestOption)
data <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/E2_summary_CA.csv")
data$Condition <- factor(data$Condition, levels = c('Baseline', 'Frequency'))
data$group_baseline <- factor(data$group_baseline, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
data$group_frequency <- factor(data$group_frequency, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
accuracy_wide <- data %>%
pivot_wider(names_from = Condition, values_from = BestOption)
model <- lmer(Frequency ~ Baseline + (1|Subnum), data = accuracy_wide)
model <- lmer(Frequency ~ Baseline, data = accuracy_wide)
model <- lm(Frequency ~ Baseline, data = accuracy_wide)
summary(model)
accuracy_wide <- data %>%
dplyr::select(Subnum, Condition, BestOption) %>%
pivot_wider(names_from = Condition, values_from = BestOption)
model <- lm(Frequency ~ Baseline, data = accuracy_wide)
summary(model)
accuracy_wide <- data %>%
pivot_wider(names_from = Condition, values_from = BestOption)
model <- lm(Frequency ~ Baseline, data = accuracy_wide)
summary(model)
model <- lm(Frequency ~ Baseline + order, data = accuracy_wide)
summary(model)
model <- glm(Frequency ~ Baseline + order, data = accuracy_wide)
summary(model)
model <- glm(Frequency ~ Baseline + group_training_baseline, data = accuracy_wide)
summary(model)
accuracy_wide <- data %>%
dplyr::select(Subnum, Condition, group_training_baseline, BestOption) %>%
pivot_wider(names_from = Condition, values_from = BestOption)
model <- glm(Frequency ~ Baseline + group_training_baseline, data = accuracy_wide)
summary(model)
model <- glm(Frequency ~ Baseline * group_training_baseline, data = accuracy_wide)
summary(model)
model <- glm(Frequency ~ Baseline * group_training_baseline, data = accuracy_wide)
summary(model)
plot(allEffects(model))
accuracy_wide <- data %>%
dplyr::select(Subnum, Condition, group_training_frequency, BestOption) %>%
pivot_wider(names_from = Condition, values_from = BestOption)
model <- glm(Frequency ~ Baseline * group_training_frequency, data = accuracy_wide)
summary(model)
plot(allEffects(model))
model <- glm(Frequency ~ Baseline + group_training_frequency, data = accuracy_wide)
summary(model)
plot(allEffects(model))
