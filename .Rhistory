model_summary_frequency <- model_summary %>%
filter(Condition == 'Frequency')
model_list <- c('delta_decay', 'delta_decay_PVL', 'delta_decay_PVL_relative')
model_list <- c('delta_asymmetric_decay_win',
'delta_decay_win',
'delta_decay_PVL_win')
model_summary <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/model_summary.csv")
model_summary <- model_summary %>%
left_join(CA %>% dplyr::select(Subnum, Condition, BestOption, BestOption_Baseline, training_accuracy),by = c("Subnum", "Condition"))
model_summary$Condition <- factor(model_summary$Condition, levels = c('Baseline', 'Frequency'))
model_summary_baseline <- model_summary %>%
filter(Condition == 'Baseline')
model_summary_frequency <- model_summary %>%
filter(Condition == 'Frequency')
model_list <- c('delta_decay', 'delta_decay_PVL', 'delta_decay_PVL_relative')
model_list <- c('delta_asymmetric_decay_win',
'delta_decay_win',
'delta_decay_PVL_win')
# model_list <- c('delta_PVL_relative', 'decay_PVL_relative')
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
model <- glm(weight ~ BestOption_Baseline + model, data = model_data)
summary(model)
plot(allEffects(model))
model <- glm(weight ~ BestOption_Baseline * model, data = model_data)
summary(model)
plot(allEffects(model))
model <- lmer(weight ~ BestOption_Baseline + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model_summary <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/model_summary.csv")
model_summary <- model_summary %>%
left_join(CA %>% dplyr::select(Subnum, Condition, BestOption, BestOption_Baseline, training_accuracy),by = c("Subnum", "Condition"))
model_summary$Condition <- factor(model_summary$Condition, levels = c('Baseline', 'Frequency'))
model_summary_baseline <- model_summary %>%
filter(Condition == 'Baseline')
model_summary_frequency <- model_summary %>%
filter(Condition == 'Frequency')
model_list <- c('delta_decay', 'delta_decay_PVL', 'delta_decay_PVL_relative')
model_list <- c('delta_asymmetric_decay_win',
'delta_decay_win')
# model_list <- c('delta_PVL_relative', 'decay_PVL_relative')
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
model <- lmer(weight ~ BestOption_Baseline + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model <- lmer(weight ~ BestOption_Baseline * model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model_list <- c('delta_asymmetric_decay_win')
# model_list <- c('delta_PVL_relative', 'decay_PVL_relative')
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
model <- lmer(weight ~ BestOption_Baseline + (1|Subnum), data = model_data)
model <- lm(weight ~ BestOption_Baseline, data = model_data)
summary(model)
plot(allEffects(model))
model_list <- c(
'delta_decay_win')
# model_list <- c('delta_PVL_relative', 'decay_PVL_relative')
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
model <- lm(weight ~ BestOption_Baseline, data = model_data)
summary(model)
plot(allEffects(model))
data <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/E2_data_modeled.csv")
data <- data %>%
left_join(
accuracy_wide %>% dplyr::select(Subnum, TrialType, BestOption_Baseline),
by = c("Subnum", "TrialType")
)
data$Condition <- factor(data$Condition, levels = c('Baseline', 'Frequency'))
data$TrialType <- factor(data$TrialType, levels = c('CA', 'AB', 'CD', 'CB', 'BD', 'AD'))
frequency <- data %>%
filter(Condition == 'Frequency')
CA <- data %>%
filter(TrialType == 'CA')
BD <- data %>%
filter(TrialType == 'BD')
CB <- data %>%
filter(TrialType == 'CB')
AD <- data %>%
filter(TrialType == 'AD')
baseline_CA <- CA %>%
filter(Condition == 'Baseline')
frequency_CA <- CA %>%
filter(Condition == 'Frequency')
model_list <- c('delta_asymmetric_decay_win')
# model_list <- c('delta_PVL_relative', 'decay_PVL_relative')
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
ata <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/E2_data_modeled.csv")
data <- data %>%
left_join(
accuracy_wide %>% dplyr::select(Subnum, TrialType, BestOption_Baseline),
by = c("Subnum", "TrialType")
)
data <- data %>%
left_join(model_data %>% dplyr::select(Subnum, Condition, t, alpha, alpha_neg, weight),by = c("Subnum", "Condition"))
data$Condition <- factor(data$Condition, levels = c('Baseline', 'Frequency'))
data$TrialType <- factor(data$TrialType, levels = c('CA', 'AB', 'CD', 'CB', 'BD', 'AD'))
data <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/E2_data_modeled.csv")
data <- data %>%
left_join(
accuracy_wide %>% dplyr::select(Subnum, TrialType, BestOption_Baseline),
by = c("Subnum", "TrialType")
)
data <- data %>%
left_join(model_data %>% dplyr::select(Subnum, Condition, t, alpha, alpha_neg, weight),by = c("Subnum", "Condition"))
data$Condition <- factor(data$Condition, levels = c('Baseline', 'Frequency'))
data$TrialType <- factor(data$TrialType, levels = c('CA', 'AB', 'CD', 'CB', 'BD', 'AD'))
frequency <- data %>%
filter(Condition == 'Frequency')
CA <- data %>%
filter(TrialType == 'CA')
BD <- data %>%
filter(TrialType == 'BD')
CB <- data %>%
filter(TrialType == 'CB')
AD <- data %>%
filter(TrialType == 'AD')
baseline_CA <- CA %>%
filter(Condition == 'Baseline')
frequency_CA <- CA %>%
filter(Condition == 'Frequency')
View(data)
View(data)
data <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/E2_data_modeled.csv")
data <- data %>%
left_join(
accuracy_wide %>% dplyr::select(Subnum, TrialType, BestOption_Baseline),
by = c("Subnum", "TrialType")
)
data <- data %>%
left_join(model_data %>% dplyr::select(Subnum, Condition,alpha_neg, weight),by = c("Subnum", "Condition"))
data$Condition <- factor(data$Condition, levels = c('Baseline', 'Frequency'))
data$TrialType <- factor(data$TrialType, levels = c('CA', 'AB', 'CD', 'CB', 'BD', 'AD'))
frequency <- data %>%
filter(Condition == 'Frequency')
CA <- data %>%
filter(TrialType == 'CA')
BD <- data %>%
filter(TrialType == 'BD')
CB <- data %>%
filter(TrialType == 'CB')
AD <- data %>%
filter(TrialType == 'AD')
baseline_CA <- CA %>%
filter(Condition == 'Baseline')
frequency_CA <- CA %>%
filter(Condition == 'Frequency')
View(data)
data <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/E2_data_modeled.csv")
data <- data %>%
left_join(
accuracy_wide %>% dplyr::select(Subnum, TrialType, BestOption_Baseline),
by = c("Subnum", "TrialType")
) %>%
left_join(
model_data %>% dplyr::select(Subnum, alpha_neg, weight),
by = "Subnum"
) %>%
mutate(
Condition = factor(Condition, levels = c("Baseline","Frequency")),
TrialType = factor(TrialType, levels = c("CA","AB","CD","CB","BD","AD"))
)
View(data)
frequency <- data %>%
filter(Condition == 'Frequency')
CA <- data %>%
filter(TrialType == 'CA')
BD <- data %>%
filter(TrialType == 'BD')
CB <- data %>%
filter(TrialType == 'CB')
AD <- data %>%
filter(TrialType == 'AD')
baseline_CA <- CA %>%
filter(Condition == 'Baseline')
frequency_CA <- CA %>%
filter(Condition == 'Frequency')
model <- lmer(weight ~ BestOption * Condition + (1|Subnum), data = CA)
summary(model)
plot(allEffects(model))
model <- lmer(BestOption ~ weight * Condition + (1|Subnum), data = CA)
summary(model)
plot(allEffects(model))
model <- lmer(weight ~ BestOption_Baseline + (1|Subnum), data = frequency_CA)
summary(model)
plot(allEffects(model))
model <- lmer(weight ~ BestOption_Baseline + (1|Subnum), data = frequency_CA)
summary(model)
plot(allEffects(model))
model <- lmer(weight ~ BestOption_Baseline  model + (1|Subnum), data = model_data)
model <- lm(weight ~ BestOption_Baseline, data = model_data)
summary(model)
plot(allEffects(model))
model <- lm(weight ~ BestOption_Baseline + training_accuracy, data = model_data)
summary(model)
plot(allEffects(model))
model <- lm(alpha ~ BestOption_Baseline + training_accuracy, data = model_data)
summary(model)
plot(allEffects(model))
model <- lm(alpha_neg ~ BestOption_Baseline + training_accuracy, data = model_data)
summary(model)
plot(allEffects(model))
model <- lm(t ~ BestOption_Baseline + training_accuracy, data = model_data)
summary(model)
plot(allEffects(model))
model_list <- c('delta_decay_win')
# model_list <- c('delta_PVL_relative', 'decay_PVL_relative')
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
model <- lm(weight ~ BestOption_Baseline + training_accuracy, data = model_data)
summary(model)
plot(allEffects(model))
model_list <- c('delta_asymmetric_decay_win', 'delta_decay_win')
# model_list <- c('delta_PVL_relative', 'decay_PVL_relative')
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
model <- lm(weight ~ BestOption_Baseline + training_accuracy + model, data = model_data)
summary(model)
plot(allEffects(model))
model <- lmer(weight ~ BestOption_Baseline + training_accuracy + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model_summary <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/model_summary.csv")
model_summary <- model_summary %>%
left_join(CA %>% dplyr::select(Subnum, Condition, BestOption, BestOption_Baseline, training_accuracy),by = c("Subnum", "Condition"))
model_summary$Condition <- factor(model_summary$Condition, levels = c('Baseline', 'Frequency'))
model_summary_baseline <- model_summary %>%
filter(Condition == 'Baseline')
model_summary_frequency <- model_summary %>%
filter(Condition == 'Frequency')
model_list <- c('delta_decay', 'delta_decay_PVL', 'delta_decay_PVL_relative')
model_list <- c('delta_asymmetric_decay_win')
# model_list <- c('delta_PVL_relative', 'decay_PVL_relative')
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
data <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/E2_summary_modeled.csv")
data$Condition <- factor(data$Condition, levels = c('Baseline', 'Frequency'))
data$TrialType <- factor(data$TrialType, levels = c('CA', 'AB', 'CD', 'CB', 'BD', 'AD'))
data$group_baseline <- factor(data$group_baseline, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
data$group_frequency <- factor(data$group_frequency, levels = c(1, 2, 3),
labels = c('Good Learner', 'Average Learner', 'Bad Learner'))
unique(data$group_frequency)
data$Gender <- factor(data$Gender, levels = c("Female", "Male", "Other", "Prefer not to answer"))
data$Ethnicity <- factor(data$Ethnicity, levels = c("Hispanic or Latino", "Not Hispanic or Latino","Prefer not to answer"))
data$Race <- factor(data$Race, levels = c("More than one Race", "White", "Asian",
"Prefer not to answer", "Black or African American",
"American Indian or Alaskan Native",
"Native Hawaiin or Other Pacific Islander"))
individual_data <- data %>%
dplyr::select(Subnum, group_baseline, prob1_baseline, prob2_baseline, prob3_baseline,
group_frequency, prob1_frequency, prob2_frequency, prob3_frequency,
Gender, Ethnicity, Race, Age, Big5O, Big5C,
Big5E, Big5A, Big5N, BISScore, CESDScore, ESIBF_disinhScore,
ESIBF_aggreScore, ESIBF_sScore, PSWQScore, STAITScore, STAISScore,
t, alpha, subj_weight,
t_All, alpha_All, subj_weight_All) %>%
distinct(Subnum, .keep_all = TRUE)
training <- data %>%
filter(TrialType%in%c('AB', 'CD'))
testing <- data %>%
filter(TrialType%in%c('CA', 'CB', 'BD', 'AD'))
BD <- data %>%
filter(TrialType == 'BD')
CB <- data %>%
filter(TrialType == 'CB')
AD <- data %>%
filter(TrialType == 'AD')
accuracy_wide <- data %>%
pivot_wider(id_cols = c(Subnum, TrialType, group_baseline, group_frequency,
C_diff, t_All, alpha_All, subj_weight_All),
names_from = Condition,
values_from = c(BestOption, training_accuracy, t, alpha, subj_weight))
accuracy_wide_CA <- accuracy_wide %>%
filter(TrialType == 'CA')
accuracy_wide_AB <- accuracy_wide %>%
filter(TrialType == 'AB')
CA <- data %>%
filter(TrialType == 'CA')%>%
left_join(accuracy_wide_CA %>% dplyr::select(Subnum, BestOption_Baseline),by = "Subnum")
baseline_CA <- CA %>%
filter(Condition == 'Baseline')
frequency_CA <- CA %>%
filter(Condition == 'Frequency')
model_summary <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/model_summary.csv")
model_summary <- model_summary %>%
left_join(CA %>% dplyr::select(Subnum, Condition, BestOption, BestOption_Baseline, training_accuracy),by = c("Subnum", "Condition"))
model_summary$Condition <- factor(model_summary$Condition, levels = c('Baseline', 'Frequency'))
model_summary_baseline <- model_summary %>%
filter(Condition == 'Baseline')
model_summary_frequency <- model_summary %>%
filter(Condition == 'Frequency')
model_list <- c('delta_decay', 'delta_decay_PVL', 'delta_decay_PVL_relative')
model_list <- c('delta_asymmetric_decay_win')
# model_list <- c('delta_PVL_relative', 'decay_PVL_relative')
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
model_data <- model_summary %>%
filter(model%in%model_list)
model <- lmer(weight ~ Condition + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model <- glm(weight ~ Condition, data = model_data)
summary(model)
plot(allEffects(model))
model <- lmer(BIC ~ BestOption_Baseline * model + (1|Subnum), data = model_data)
model_summary <- read.csv("C:/Users/zuire/PycharmProjects/GainLoss/data/model_summary.csv")
model_summary <- model_summary %>%
left_join(CA %>% dplyr::select(Subnum, Condition, BestOption, BestOption_Baseline, training_accuracy),by = c("Subnum", "Condition"))
model_summary$Condition <- factor(model_summary$Condition, levels = c('Baseline', 'Frequency'))
model_summary_baseline <- model_summary %>%
filter(Condition == 'Baseline')
model_summary_frequency <- model_summary %>%
filter(Condition == 'Frequency')
model_list <- c('delta_decay', 'delta_decay_PVL', 'delta_decay_PVL_relative')
model_list <- c('delta_asymmetric_decay_win')
# model_list <- c('delta_PVL_relative', 'decay_PVL_relative')
model_data <- model_summary %>%
filter(model%in%model_list)
model <- lmer(BIC ~ BestOption_Baseline * model + (1|Subnum), data = model_data)
model_list <- c('delta', 'delta_PVL', 'delta_asymmetric', 'decay', 'decay_PVL',
'decay_win')
model_data <- model_summary %>%
filter(model%in%model_list)
model_list <- c('delta', 'delta_PVL', 'delta_asymmetric', 'decay', 'decay_PVL',
'decay_win')
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
model <- lmer(BIC ~ BestOption_Baseline * model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model_list <- c( 'decay', 'decay_PVL',
'decay_win')
model_list <- c('delta_asymmetric_decay_win')
# model_list <- c('delta_PVL_relative', 'decay_PVL_relative')
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
model <- lmer(BIC ~ BestOption_Baseline * model + (1|Subnum), data = model_data)
model_list <- c( 'decay', 'decay_PVL',
'decay_win')
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
model <- lmer(BIC ~ BestOption_Baseline * model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model_list <- c('delta', 'delta_PVL', 'delta_asymmetric')
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
model <- lmer(BIC ~ BestOption_Baseline * model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model <- lmer(BIC ~ BestOption_Baseline + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model_list <- c('decay', 'decay_PVL',
'decay_win')
model <- lmer(BIC ~ BestOption_Baseline * model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model_list <- c('decay', 'decay_PVL',
'decay_win')
model_data <- model_summary %>%
filter(model%in%model_list)
model <- lmer(BIC ~ BestOption_Baseline * model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model_list <- c('delta', 'delta_PVL', 'delta_asymmetric', 'decay', 'decay_PVL',
'decay_win')
model_data <- model_summary %>%
filter(model%in%model_list)
model <- lmer(alpha ~ BestOption_Baseline + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model <- lmer(alpha ~ Condition + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model <- lmer(alpha ~ BestOption_Baseline + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model <- lmer(t ~ BestOption_Baseline + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model <- lmer(alpha_neg ~ BestOption_Baseline + model + (1|Subnum), data = model_data)
model <- lmer(alpha_neg ~ BestOption_Baseline + model + (1|Subnum), data = model_data)
model_list <- c('delta_asymmetric')
model_data <- model_summary %>%
filter(model%in%model_list)
model_list <- c('delta', 'delta_PVL', 'delta_asymmetric', 'decay', 'decay_PVL',
'decay_win')
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
model <- lmer(BIC ~ BestOption_Baseline + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model_list <- c('decay', 'decay_PVL',
'decay_win')
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
model <- lmer(BIC ~ BestOption_Baseline + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model_list <- c('delta', 'delta_PVL', 'delta_asymmetric')
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
model <- lmer(BIC ~ BestOption_Baseline + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model_list <- c('delta', 'delta_PVL', 'delta_asymmetric', 'decay', 'decay_PVL',
'decay_win')
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
model_list <- c('delta', 'delta_PVL', 'delta_asymmetric', 'decay', 'decay_PVL',
'decay_win')
model_data <- model_summary %>%
filter(model%in%model_list)
model <- lmer(t ~ BestOption_Baseline * Condition + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
model_list <- c('delta', 'delta_PVL', 'delta_asymmetric', 'decay', 'decay_PVL',
'decay_win')
model <- lmer(t ~ BestOption_Baseline * Condition + model + (1|Subnum), data = model_data)
model <- lmer(t ~ BestOption_Baseline + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model_list <- c('delta', 'delta_PVL', 'delta_asymmetric', 'decay', 'decay_PVL',
'decay_win')
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
model <- lmer(t ~ BestOption_Baseline + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model <- lmer(alpha ~ BestOption_Baseline + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model_list <- c('delta_asymmetric')
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
model <- lmer(alpha_neg ~ BestOption_Baseline + model + (1|Subnum), data = model_data)
model <- lmer(alpha_neg ~ BestOption_Baseline + (1|Subnum), data = model_data)
model <- lm(alpha_neg ~ BestOption_Baseline, data = model_data)
summary(model)
plot(allEffects(model))
model_list <- c('delta_PVL', 'decay_PVL')
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
model <- lmer(scale ~ BestOption_Baseline + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model <- lmer(la ~ BestOption_Baseline + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model_list <- c('delta', 'delta_PVL', 'delta_asymmetric', 'decay', 'decay_PVL',
'decay_win')
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
model_data <- model_summary %>%
filter(model%in%model_list)
model <- lmer(t ~ BestOption + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model <- lmer(t ~ BestOption * Condition + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model <- lmer(t ~ Condition + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model <- lmer(t ~ BestOption * Condition + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model <- lmer(alpha ~ BestOption * Condition + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model_list <- c('delta_asymmetric_decay_win')
model_data <- model_summary %>%
filter(model%in%model_list)
model <- glm(weight ~ BestOption * Condition, data = model_data)
summary(model)
plot(allEffects(model))
model <- lm(weight ~ BestOption_Baseline + training_accuracy + model, data = model_data)
model <- lm(weight ~ BestOption_Baseline + training_accuracy + model, data = model_data)
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
model <- lm(weight ~ BestOption_Baseline + training_accuracy + model, data = model_data)
model <- lm(weight ~ BestOption_Baseline + training_accuracy, data = model_data)
summary(model)
plot(allEffects(model))
model <- glm(weight ~ BestOption_Baseline + training_accuracy, data = model_data)
summary(model)
plot(allEffects(model))
model_list <- c('decay', 'decay_PVL',
'decay_win')
model_data <- model_summary_frequency %>%
filter(model%in%model_list)
model <- lmer(BIC ~ BestOption_Baseline + training_accuracy + model + (1|Subnum), data = model_data)
summary(model)
plot(allEffects(model))
model_list <- c('delta_asymmetric_decay_win')
model_data <- model_summary %>%
filter(model%in%model_list)
model <- glm(weight ~ BestOption * Condition + training_accuracy, data = model_data)
summary(model)
plot(allEffects(model))
model <- glm(BestOption ~ weight * Condition + training_accuracy, data = model_data)
summary(model)
plot(allEffects(model))
